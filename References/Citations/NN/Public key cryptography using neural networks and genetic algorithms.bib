@INPROCEEDINGS{6612177,  author={S. {Jhajharia} and S. {Mishra} and S. {Bali}}, booktitle={2013 Sixth International Conference on Contemporary Computing (IC3)},  title={Public key cryptography using neural networks and genetic algorithms},  year={2013}, volume={}, number={}, pages={137-142}, abstract={By making use of Artificial Intelligence (AI), Human Intelligence can be simulated by a machine, Neural Networks is one such sub field of AI. Artificial Neural Networks (ANN) consists of neurons and weights assigned to inter neuron connections helps in storing the acquired knowledge. This paper makes use of Hebbian learning rule to train the ANN of both sender and receiver machines. In the field of Public Key Cryptography (PKC), Pseudo Random Number Generator (PRNG) are widely used to generate unique keys and random numbers used in ANN which are found to possess many types of possible attacks. It is essential for a key to possess randomness for key strength and security. This paper proposes key generation for PKC by application of ANN using Genetic Algorithm (GA). It was noticed that use of ANN along with GA has not as yet been explored. GA approach is often applied for obtaining optimization and solutions in search problems. GA correlates to the nature to a large extent producing population of numbers where number possessing higher fitness value is replicated more. Thus, making GA a very good contender for PRNGs. Good Fitness function helps in exploring search space of random numbers in more efficient manner. GA PRNGs result samples satisfies frequency test and gap test. Thus the numbers generated after each iteration by GA PRNG are statistically verified to be random and nonrepeating, having no prior relation of next number from the previous ones, acting as an essential initialization parameter for neural algorithm overcomes the problem of acknowledging the random number generated by traditional PRNG. For generating public and private keys, different number of rounds of mixing is used. This ensures that the private key generated cannot be derived from public key. Our algorithm was observed to give fast and improved performance results having practical and feasible implementation.}, keywords={genetic algorithms;neural nets;public key cryptography;search problems;public key cryptography;genetic algorithm;artificial intelligence;human intelligence;artificial neural networks;neurons;interneuron connection;acquired knowledge storage;Hebbian learning rule;ANN training;sender machine;receiver machine;PKC;pseudo random number generator;PRNG;unique key generation;key strength;security;optimization;search problem;fitness value;search space exploration;random numbers;frequency test;gap test;initialization parameter;neural algorithm;public key generation;private key generation;Genetic algorithms;Artificial neural networks;Biological cells;Sociology;Statistics;Neurons;Biological neural networks;artificial neural networks;neural cryptography;hebbian theory;genetic algorithm;public key cryptography;random number}, doi={10.1109/IC3.2013.6612177}, ISSN={}, month={Aug},}
